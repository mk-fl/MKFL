"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Copyright 2022 Flower Labs GmbH. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
==============================================================================
"""
import builtins
import collections.abc
import flwr.proto.node_pb2
import flwr.proto.transport_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class Task(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PRODUCER_FIELD_NUMBER: builtins.int
    CONSUMER_FIELD_NUMBER: builtins.int
    CREATED_AT_FIELD_NUMBER: builtins.int
    DELIVERED_AT_FIELD_NUMBER: builtins.int
    TTL_FIELD_NUMBER: builtins.int
    ANCESTRY_FIELD_NUMBER: builtins.int
    SA_FIELD_NUMBER: builtins.int
    LEGACY_SERVER_MESSAGE_FIELD_NUMBER: builtins.int
    LEGACY_CLIENT_MESSAGE_FIELD_NUMBER: builtins.int
    @property
    def producer(self) -> flwr.proto.node_pb2.Node: ...
    @property
    def consumer(self) -> flwr.proto.node_pb2.Node: ...
    created_at: builtins.str
    delivered_at: builtins.str
    ttl: builtins.str
    @property
    def ancestry(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def sa(self) -> global___SecureAggregation: ...
    @property
    def legacy_server_message(self) -> flwr.proto.transport_pb2.ServerMessage: ...
    @property
    def legacy_client_message(self) -> flwr.proto.transport_pb2.ClientMessage: ...
    def __init__(
        self,
        *,
        producer: flwr.proto.node_pb2.Node | None = ...,
        consumer: flwr.proto.node_pb2.Node | None = ...,
        created_at: builtins.str = ...,
        delivered_at: builtins.str = ...,
        ttl: builtins.str = ...,
        ancestry: collections.abc.Iterable[builtins.str] | None = ...,
        sa: global___SecureAggregation | None = ...,
        legacy_server_message: flwr.proto.transport_pb2.ServerMessage | None = ...,
        legacy_client_message: flwr.proto.transport_pb2.ClientMessage | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["consumer", b"consumer", "legacy_client_message", b"legacy_client_message", "legacy_server_message", b"legacy_server_message", "producer", b"producer", "sa", b"sa"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["ancestry", b"ancestry", "consumer", b"consumer", "created_at", b"created_at", "delivered_at", b"delivered_at", "legacy_client_message", b"legacy_client_message", "legacy_server_message", b"legacy_server_message", "producer", b"producer", "sa", b"sa", "ttl", b"ttl"]) -> None: ...

global___Task = Task

@typing_extensions.final
class TaskIns(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TASK_ID_FIELD_NUMBER: builtins.int
    GROUP_ID_FIELD_NUMBER: builtins.int
    RUN_ID_FIELD_NUMBER: builtins.int
    TASK_FIELD_NUMBER: builtins.int
    task_id: builtins.str
    group_id: builtins.str
    run_id: builtins.int
    @property
    def task(self) -> global___Task: ...
    def __init__(
        self,
        *,
        task_id: builtins.str = ...,
        group_id: builtins.str = ...,
        run_id: builtins.int = ...,
        task: global___Task | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["task", b"task"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["group_id", b"group_id", "run_id", b"run_id", "task", b"task", "task_id", b"task_id"]) -> None: ...

global___TaskIns = TaskIns

@typing_extensions.final
class TaskRes(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TASK_ID_FIELD_NUMBER: builtins.int
    GROUP_ID_FIELD_NUMBER: builtins.int
    RUN_ID_FIELD_NUMBER: builtins.int
    TASK_FIELD_NUMBER: builtins.int
    task_id: builtins.str
    group_id: builtins.str
    run_id: builtins.int
    @property
    def task(self) -> global___Task: ...
    def __init__(
        self,
        *,
        task_id: builtins.str = ...,
        group_id: builtins.str = ...,
        run_id: builtins.int = ...,
        task: global___Task | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["task", b"task"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["group_id", b"group_id", "run_id", b"run_id", "task", b"task", "task_id", b"task_id"]) -> None: ...

global___TaskRes = TaskRes

@typing_extensions.final
class Value(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class DoubleList(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        VALS_FIELD_NUMBER: builtins.int
        @property
        def vals(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]: ...
        def __init__(
            self,
            *,
            vals: collections.abc.Iterable[builtins.float] | None = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["vals", b"vals"]) -> None: ...

    @typing_extensions.final
    class Sint64List(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        VALS_FIELD_NUMBER: builtins.int
        @property
        def vals(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
        def __init__(
            self,
            *,
            vals: collections.abc.Iterable[builtins.int] | None = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["vals", b"vals"]) -> None: ...

    @typing_extensions.final
    class BoolList(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        VALS_FIELD_NUMBER: builtins.int
        @property
        def vals(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.bool]: ...
        def __init__(
            self,
            *,
            vals: collections.abc.Iterable[builtins.bool] | None = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["vals", b"vals"]) -> None: ...

    @typing_extensions.final
    class StringList(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        VALS_FIELD_NUMBER: builtins.int
        @property
        def vals(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
        def __init__(
            self,
            *,
            vals: collections.abc.Iterable[builtins.str] | None = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["vals", b"vals"]) -> None: ...

    @typing_extensions.final
    class BytesList(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        VALS_FIELD_NUMBER: builtins.int
        @property
        def vals(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.bytes]: ...
        def __init__(
            self,
            *,
            vals: collections.abc.Iterable[builtins.bytes] | None = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["vals", b"vals"]) -> None: ...

    DOUBLE_FIELD_NUMBER: builtins.int
    SINT64_FIELD_NUMBER: builtins.int
    BOOL_FIELD_NUMBER: builtins.int
    STRING_FIELD_NUMBER: builtins.int
    BYTES_FIELD_NUMBER: builtins.int
    DOUBLE_LIST_FIELD_NUMBER: builtins.int
    SINT64_LIST_FIELD_NUMBER: builtins.int
    BOOL_LIST_FIELD_NUMBER: builtins.int
    STRING_LIST_FIELD_NUMBER: builtins.int
    BYTES_LIST_FIELD_NUMBER: builtins.int
    double: builtins.float
    """Single element"""
    sint64: builtins.int
    bool: builtins.bool
    string: builtins.str
    bytes: builtins.bytes
    @property
    def double_list(self) -> global___Value.DoubleList:
        """List types"""
    @property
    def sint64_list(self) -> global___Value.Sint64List: ...
    @property
    def bool_list(self) -> global___Value.BoolList: ...
    @property
    def string_list(self) -> global___Value.StringList: ...
    @property
    def bytes_list(self) -> global___Value.BytesList: ...
    def __init__(
        self,
        *,
        double: builtins.float = ...,
        sint64: builtins.int = ...,
        bool: builtins.bool = ...,
        string: builtins.str = ...,
        bytes: builtins.bytes = ...,
        double_list: global___Value.DoubleList | None = ...,
        sint64_list: global___Value.Sint64List | None = ...,
        bool_list: global___Value.BoolList | None = ...,
        string_list: global___Value.StringList | None = ...,
        bytes_list: global___Value.BytesList | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["bool", b"bool", "bool_list", b"bool_list", "bytes", b"bytes", "bytes_list", b"bytes_list", "double", b"double", "double_list", b"double_list", "sint64", b"sint64", "sint64_list", b"sint64_list", "string", b"string", "string_list", b"string_list", "value", b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["bool", b"bool", "bool_list", b"bool_list", "bytes", b"bytes", "bytes_list", b"bytes_list", "double", b"double", "double_list", b"double_list", "sint64", b"sint64", "sint64_list", b"sint64_list", "string", b"string", "string_list", b"string_list", "value", b"value"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["value", b"value"]) -> typing_extensions.Literal["double", "sint64", "bool", "string", "bytes", "double_list", "sint64_list", "bool_list", "string_list", "bytes_list"] | None: ...

global___Value = Value

@typing_extensions.final
class SecureAggregation(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class NamedValuesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___Value: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___Value | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    NAMED_VALUES_FIELD_NUMBER: builtins.int
    @property
    def named_values(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___Value]: ...
    def __init__(
        self,
        *,
        named_values: collections.abc.Mapping[builtins.str, global___Value] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["named_values", b"named_values"]) -> None: ...

global___SecureAggregation = SecureAggregation
